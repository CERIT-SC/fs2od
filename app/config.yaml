# Directories which will be watched by this application. These directories are periodically (or manulay) checked
# and in case of subdirectory is detected its processing are started. 
watchedDirectories:
  - "/volumes/volume1/test"
  #- "/volumes/volumeX/test"

## Metadata settings
# Name of YAML files with metadata. Only if subdirectory contains one of specifed YAML files, it is proccesed by the application.
# To this file will be written attributes describing Onedata space.
metadataFiles:
  - "SPA.yml"

# Names of tags in metadata YAML file
metadataFileTags:
  onedata: Onedata2
  space: Space
  publicURL: PublicURL
  inviteToken: InviteToken

# Name of institution importing datasets to Onedata
institutionName: MUNI ICS

# Prefix off all datasets (spaces, groups, tokens and storages)
datasetPrefix: ""

# Import attributes from metadata files to metadata stored by a Space in Onedata
importMetadata: False

## Output detail level
# 0 - silent mode - nothing printed
# 1 - error
# 2 - error, warning
# 3 - error, warning, info
# 4 - error, warning, info, debug
# 5 - error, warning, info, debug, verbose (debug with extensive data prints)
verboseLevel: 3

## Test mode
# When test mode is allowed (set to True) all instances (spaces, tokens, groups, ...) are created with a given prefix,
# which value is set by testModePrefix. These instances with a prefix can be deleted in bulk by command:
# python3 test.py --remove_instances some_prefix
# In production set it to False.
testMode: True
testModePrefix: "test123_"

## Waiting
# It can take a while when Onedata compoments register changes which are made by calls of API. 
# Because of Onezone and Oneprovider in some case must exchange some information. E.g. if application do some changes 
# in Onezone, it must wait a while until it can manipulate with these changes on Oneprovider and vice versa. 
# Therefor there are a pauses between some function calls. You can set duration of waiting.
# 0 = don't sleep (only testing without Onedata)
# 1 = wait only a while (testing on small datasets)
# 2 = normal production value
sleepFactor: 1

## Setting of automatic continous import of files from POSIX filesystem to Onedata service
continousFileImport:
  # You can disable continous import of subdirectories. In this case content of direcotry is loaded only once at the time
  # when application come across the direcotry for the first time. If set to False, following atrributes aren't relevant.
  enabled: True
  # Name of file indicating that the subdirectory content can be modified. If directory contains this file (regardless to its content) ,
  # there will be set up a continous import of files from filesystem to Onedata service. If this file was removed, continous import 
  # is stopped. 
  runningFileName: ".running"
  # Time between two scans of filesystem by Oneprovider in seconds
  scanInterval: 10800
  # If set to True file modifications are detected. If set to False, only creations and deletions of files on
  # will be detected (files are treated as immutable).
  detectModifications: False
  # If set to True file deletions are detected. If set to False, files deletions aren't detected.
  detectDeletions: False

# Onedata POSIX like permissions which would be set to all directories and files
initialPOSIXlikePermissions: "0775"

# Parent group for dataspaces groups.
userGroupId: ""

# Implicit space size. It is size of space on Oneprovider after its creation. 
# Is should be set to great value (bigger than expected size of the bigest dataset directory). E.g. 10 TB = 10*2**40 = 10995116277760
implicitSpaceSize: 10995116277760

## AAI section
# Service user identifier
serviceUserId: ""

# Service group identifier
managerGroupId: ""

## DAREG - Datasets register
dareg:
  # Enable storing information about datasets to dareg
  enabled: False
  host: ""
  # Authorization token
  token: ""
  # ID of the fs2od instance in dareg
  origin_instance_pk: 1

# REST API access (hostnames and tokens) to Onedata services
onezone:
  host: ""
  apiToken: ""
oneprovider: 
  host: ""
  apiToken: ""
onepanel: 
  host: ""
  apiToken: ""
